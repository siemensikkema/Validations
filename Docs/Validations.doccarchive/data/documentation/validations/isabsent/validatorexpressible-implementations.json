{"variants":[{"paths":["\/documentation\/validations\/isabsent\/validatorexpressible-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/Validations\/documentation\/Validations\/IsAbsent\/ValidatorExpressible-Implementations","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"No overview available."}],"kind":"article","metadata":{"modules":[{"name":"Validations"}],"role":"collectionGroup","title":"ValidatorExpressible Implementations"},"hierarchy":{"paths":[["doc:\/\/Validations\/documentation\/Validations","doc:\/\/Validations\/documentation\/Validations\/IsAbsent"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/Validations\/documentation\/Validations\/IsAbsent\/and(_:)","doc:\/\/Validations\/documentation\/Validations\/IsAbsent\/mapFailures(_:)","doc:\/\/Validations\/documentation\/Validations\/IsAbsent\/or(_:)"],"generated":true}],"references":{"doc://Validations/documentation/Validations/ValidationFailure":{"role":"symbol","title":"ValidationFailure","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidationFailure"}],"abstract":[{"type":"text","text":"Enables conforming types to represent a single validation failure."}],"identifier":"doc:\/\/Validations\/documentation\/Validations\/ValidationFailure","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValidationFailure"}],"url":"\/documentation\/validations\/validationfailure"},"doc://Validations/documentation/Validations/Validator":{"role":"symbol","title":"Validator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validator"}],"abstract":[{"type":"text","text":"Able to validate a "},{"type":"codeVoice","code":"Decoded<T>"},{"type":"text","text":" value."}],"identifier":"doc:\/\/Validations\/documentation\/Validations\/Validator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Validator"}],"url":"\/documentation\/validations\/validator"},"doc://Validations/documentation/Validations/IsAbsent/or(_:)":{"role":"symbol","title":"or(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"or"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:11Validations9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Produces a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Validations\/documentation\/Validations\/Validator"},{"type":"text","text":" by combining "},{"type":"codeVoice","code":"self"},{"type":"text","text":" with another validator using “or” logic."}],"identifier":"doc:\/\/Validations\/documentation\/Validations\/IsAbsent\/or(_:)","kind":"symbol","type":"topic","url":"\/documentation\/validations\/isabsent\/or(_:)"},"doc://Validations/documentation/Validations":{"role":"collection","title":"Validations","abstract":[{"type":"text","text":"Type-safe and composable validations with versatile output."}],"identifier":"doc:\/\/Validations\/documentation\/Validations","kind":"symbol","type":"topic","url":"\/documentation\/validations"},"doc://Validations/documentation/Validations/IsAbsent/mapFailures(_:)":{"role":"symbol","title":"mapFailures(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mapFailures"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"ValidationFailure","preciseIdentifier":"s:11Validations17ValidationFailureP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ValidationFailure","preciseIdentifier":"s:11Validations17ValidationFailureP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:11Validations9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Map any failure resulting from the validation to a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Validations\/documentation\/Validations\/ValidationFailure"},{"type":"text","text":"."}],"identifier":"doc:\/\/Validations\/documentation\/Validations\/IsAbsent\/mapFailures(_:)","kind":"symbol","type":"topic","url":"\/documentation\/validations\/isabsent\/mapfailures(_:)"},"doc://Validations/documentation/Validations/IsAbsent":{"role":"symbol","title":"IsAbsent","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IsAbsent"}],"abstract":[],"identifier":"doc:\/\/Validations\/documentation\/Validations\/IsAbsent","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IsAbsent"}],"url":"\/documentation\/validations\/isabsent"},"doc://Validations/documentation/Validations/IsAbsent/and(_:)":{"role":"symbol","title":"and(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"and"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:11Validations9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Produces a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Validations\/documentation\/Validations\/Validator"},{"type":"text","text":" by combining "},{"type":"codeVoice","code":"self"},{"type":"text","text":" with another validator using “and” logic."}],"identifier":"doc:\/\/Validations\/documentation\/Validations\/IsAbsent\/and(_:)","kind":"symbol","type":"topic","url":"\/documentation\/validations\/isabsent\/and(_:)"}}}