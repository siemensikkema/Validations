{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"or"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/Validations\/documentation\/Validations\/Validator","preciseIdentifier":"s:11Validations9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Validations\/documentation\/Validations\/ValidatorExpressible","preciseIdentifier":"s:11Validations20ValidatorExpressibleP","text":"ValidatorExpressible"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Validations\/documentation\/Validations\/Validator"},{"type":"text","text":"."}]}]},{"kind":"parameters","parameters":[{"name":"other","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Validations\/documentation\/Validations\/Validator"},{"type":"text","text":" to combine with "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The resulting validator only fails if "},{"type":"strong","inlineContent":[{"type":"text","text":"both"}]},{"type":"text","text":" validators fail. Failures from both validators are combined."}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/validations\/validator\/or(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Validations\/documentation\/Validations\/Validator\/or(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Produces a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Validations\/documentation\/Validations\/Validator"},{"type":"text","text":" by combining "},{"type":"codeVoice","code":"self"},{"type":"text","text":" with another validator using “or” logic."}],"kind":"symbol","metadata":{"role":"symbol","title":"or(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"or"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:11Validations9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:11Validations20ValidatorExpressiblePAAE2oryAA0B0Vy1TQzGqd__AaBRd__AGQyd__AHRSlF::SYNTHESIZED::s:11Validations9ValidatorV","extendedModule":"Validations","modules":[{"name":"Validations"}]},"hierarchy":{"paths":[["doc:\/\/Validations\/documentation\/Validations","doc:\/\/Validations\/documentation\/Validations\/Validator","doc:\/\/Validations\/documentation\/Validations\/Validator\/ValidatorExpressible-Implementations"]]},"references":{"doc://Validations/documentation/Validations/ValidatorExpressible":{"role":"symbol","title":"ValidatorExpressible","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidatorExpressible"}],"abstract":[{"type":"text","text":"Types that are able to provide  a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Validations\/documentation\/Validations\/Validator"},{"type":"text","text":"."}],"identifier":"doc:\/\/Validations\/documentation\/Validations\/ValidatorExpressible","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValidatorExpressible"}],"url":"\/documentation\/validations\/validatorexpressible"},"doc://Validations/documentation/Validations/Validator/or(_:)":{"role":"symbol","title":"or(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"or"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:11Validations9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Produces a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Validations\/documentation\/Validations\/Validator"},{"type":"text","text":" by combining "},{"type":"codeVoice","code":"self"},{"type":"text","text":" with another validator using “or” logic."}],"identifier":"doc:\/\/Validations\/documentation\/Validations\/Validator\/or(_:)","kind":"symbol","type":"topic","url":"\/documentation\/validations\/validator\/or(_:)"},"doc://Validations/documentation/Validations/Validator":{"role":"symbol","title":"Validator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validator"}],"abstract":[{"type":"text","text":"Able to validate a "},{"type":"codeVoice","code":"Decoded<T>"},{"type":"text","text":" value."}],"identifier":"doc:\/\/Validations\/documentation\/Validations\/Validator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Validator"}],"url":"\/documentation\/validations\/validator"},"doc://Validations/documentation/Validations/Validator/ValidatorExpressible-Implementations":{"role":"collectionGroup","title":"ValidatorExpressible Implementations","abstract":[],"identifier":"doc:\/\/Validations\/documentation\/Validations\/Validator\/ValidatorExpressible-Implementations","kind":"article","type":"topic","url":"\/documentation\/validations\/validator\/validatorexpressible-implementations"},"doc://Validations/documentation/Validations":{"role":"collection","title":"Validations","abstract":[{"type":"text","text":"Type-safe and composable validations with versatile output."}],"identifier":"doc:\/\/Validations\/documentation\/Validations","kind":"symbol","type":"topic","url":"\/documentation\/validations"}}}